name: Generate SBOM with cdxgen and scan with depscan

on:
  workflow_dispatch:
    inputs:
      src_repository:
        description: 'Source Repository'
        required: true
        default: ''
      src_branch:
        description: 'Branch'
        required: false
        default: ''
      src_type:
        description: 'Project Type (java, python, dotnet) see https://cyclonedx.github.io/cdxgen/#/PROJECT_TYPES'
        required: false
        default: 'java'
      src_profile:
        description: BOM profile to use for generation. Default generic.
        required: false
        type: choice
        options:
          - 'appsec'
          - 'research'
          - 'operational'
          - 'threat-modeling'
          - 'license-compliance'
          - 'generic'
          - 'machine-learning'
          - 'ml'
          - 'deep-learning'
          - 'ml-deep'
          - 'ml-tiny'
        default: 'generic'
env:
  OUTPUT_NAME: 'cyclonedxSBOM'
jobs:
  sbom:
    runs-on: ubuntu-latest

    steps:
    - name: free space at beginning
      run: df -h
      
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.src_repository }}
        ref: ${{ inputs.src_branch }}

    - name: free space after checkout
      run: df -h
    
    - name: Generate SBOM using cdxgen container
      run: |
        docker run --rm \
          -v "$(pwd)":/app:rw \
          -v /tmp:/tmp \
          -t ghcr.io/cyclonedx/cdxgen:latest \
          -r /app -o /app/bom.json -t ${{ inputs.src_type }} \
          --profile ${{ inputs.src_profile }} --json-pretty

    - name: list files
      run: ls -la

    - name: free space after cdxgen
      run: df -h
    
    - name: clean space
      run: docker system prune -a -f

    - name: free space after clean
      run: df -h
    
    - name: Scan SBOM with depscan
      run: |
        docker run --rm \
          -e VDB_DATABASE_URL=ghcr.io/appthreat/vdbxz-app:v6 \
          -v .:/app ghcr.io/owasp-dep-scan/dep-scan \
          --bom /app/bom.json \
          --report-template /app/bom.json \
          --reports-dir /app

    - name: free space after dep-scan
      run: df -h
    
    - name: Upload SBOM results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUTPUT_NAME }}
        path: ${{github.workspace}}/*.json 
